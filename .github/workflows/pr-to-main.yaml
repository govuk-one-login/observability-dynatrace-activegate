name: Test Stacks valid
# On a PR to the main branch or via manual execution this workflow will 
# Synth the CloudFormation templates from the typescript cdk run jests tests
# against the resultant files and confirm they contain the expected resources.

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.18.0'
      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.DT_GH_ACTIONS_NON_PROD_ROLE_ARN }}
          #role-to-assume: ${{ secrets.DT_GH_ACTIONS_SANDBOX_ROLE_ARN }}
          aws-region: eu-west-2
          role-duration-seconds: 1800
      - name: Search latest hardened AMI
        id: hardened-ami
        run: |
          LATEST_AMI=$(aws ec2 describe-images \
          --owners aws-marketplace \
          --filters 'Name=name,Values=*'${PRODUCT_ID}'*' \
          --query 'Images[*].[ImageId,CreationDate]' --output text | sort -k2 -r | head -n1 | awk '{ print $1 }')
          echo "amiId=$LATEST_AMI" >> "$GITHUB_OUTPUT"
        env:
          AWS_DEFAULT_REGION: eu-west-2
          # Product ID belongs to the aws marketplace owner and is unique to the ami offering
          PRODUCT_ID: "c41d38c4-3f6a-4434-9a86-06dd331d3f9c"
      - name: Install node dependencies
        run: |
          npm ci
          sed -i 's/"amiId": ""/"amiId": "${{steps.hardened-ami.outputs.amiId}}"/' cdk.context.json  
      - name: Run Jest Tests
        run: npm test

  validate:
    runs-on: ubuntu-latest
    needs: 
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.DT_GH_ACTIONS_NON_PROD_ROLE_ARN }}
          #role-to-assume: ${{ secrets.DT_GH_ACTIONS_SANDBOX_ROLE_ARN }}
          aws-region: eu-west-2
          role-duration-seconds: 1800
      - name: Search latest hardened AMI
        id: hardened-ami
        run: |
          LATEST_AMI=$(aws ec2 describe-images \
          --owners aws-marketplace \
          --filters 'Name=name,Values=*'${PRODUCT_ID}'*' \
          --query 'Images[*].[ImageId,CreationDate]' --output text | sort -k2 -r | head -n1 | awk '{ print $1 }')
          echo "amiId=$LATEST_AMI" >> "$GITHUB_OUTPUT"
        env:
          AWS_DEFAULT_REGION: eu-west-2
          # Product ID belongs to the aws marketplace owner and is unique to the ami offering
          PRODUCT_ID: "c41d38c4-3f6a-4434-9a86-06dd331d3f9c"
      - name: cdk synth
        run: |
          sed -i 's/"amiId": ""/"amiId": "${{steps.hardened-ami.outputs.amiId}}"/' cdk.context.json
          npm install
          npm run cdk synth DynatraceActivegateStack
      - name: Run Checkov action
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: cdk.out/
          framework: cloudformation
          skip_check: CKV_AWS_107,CKV_AWS_111
